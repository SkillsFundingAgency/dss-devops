#######################################################
##  THIS PIPELINE SUPPORTS THE 'AT' AND 'TEST' ENVs  ##
#######################################################

# No. # DSS service             # Function app prefix # APIM path               #
# --- # ----------------------- # ------------------- # ----------------------- #
# 1   # Action plans            # acpla               # actionplans             #
# 2   # Actions                 # act                 # actions                 #
# 3   # Address                 # addr                # addresses               #
# 4   # Adviser details         # advde               # adviserdetails          #
# 5   # Collections             # col                 # collections             #
# 6   # Contact details         # cont                # contactdetails          #
# 7   # Customer                # cust                # customers               #
# 8   # Digital identity        # digiden             # digitalidentities       #
# 9   # Diversity               # div                 # diversitydetails        #
# 10  # Employment progression  # employ              # employmentprogressions  #
# 11  # Goals                   # goals               # goals                   #
# 12  # Interaction             # intac               # interactions            #
# 13  # Learning progression    # learn               # learningprogressions    #
# 14  # Outcomes                # otcm                # outcomes                #
# 15  # Sessions                # sess                # sessions                #
# 16  # Subscriptions           # subs                # subscriptions           #
# 17  # Transfer                # tran                # transfers               #
# 18  # Webchat                 # wchat               # webchats                #

parameters:
- name: dss_service
  displayName: DSS Service
  type: string
  default: action-plans
  values:
  - action-plans
  - actions
  - address
  - adviser-details
  - collections
  - contact-details
  - customer
  - digital-identity
  - diversity
  - employment-progression
  - goals
  - interaction
  - learning-progression
  - outcomes
  - sessions
  - subscriptions
  - transfer
  - webchat

- name: version
  displayName: Function App and APIM Version
  type: string
  default: v1

- name: environment
  displayName: Environment Prefix
  type: string
  default: at
  values:
  - at
  - test

- name: delete_apim
  displayName: Delete API version?
  type: string
  default: no
  values:
  - no
  - yes

- name: delete_func_app
  displayName: Delete Function app?
  type: string
  default: no
  values:
  - no
  - yes

# Set variables dynamically
variables:
  ${{ if eq(parameters['dss_service'], 'action-plans') }}:
    apim_path: 'actionplans'
    function_app_prefix: 'acpla'
  ${{ elseif eq(parameters['dss_service'], 'actions') }}:
    apim_path: 'actions'
    function_app_prefix: 'act'
  ${{ elseif eq(parameters['dss_service'], 'address') }}:
    apim_path: 'addresses'
    function_app_prefix: 'addr'
  ${{ elseif eq(parameters['dss_service'], 'adviser-details') }}:
    apim_path: 'adviserdetails'
    function_app_prefix: 'advde'
  ${{ elseif eq(parameters['dss_service'], 'collections') }}:
    apim_path: 'collections'
    function_app_prefix: 'col'
  ${{ elseif eq(parameters['dss_service'], 'contact-details') }}:
    apim_path: 'contactdetails'
    function_app_prefix: 'cont'
  ${{ elseif eq(parameters['dss_service'], 'customer') }}:
    apim_path: 'customers'
    function_app_prefix: 'cust'
  ${{ elseif eq(parameters['dss_service'], 'digital-identity') }}:
    apim_path: 'digitalidentities'
    function_app_prefix: 'digiden'
  ${{ elseif eq(parameters['dss_service'], 'diversity') }}:
    apim_path: 'diversitydetails'
    function_app_prefix: 'div'
  ${{ elseif eq(parameters['dss_service'], 'employment-progression') }}:
    apim_path: 'employmentprogressions'
    function_app_prefix: 'employ'
  ${{ elseif eq(parameters['dss_service'], 'goals') }}:
    apim_path: 'goals'
    function_app_prefix: 'goals'
  ${{ elseif eq(parameters['dss_service'], 'interaction') }}:
    apim_path: 'interactions'
    function_app_prefix: 'intac'
  ${{ elseif eq(parameters['dss_service'], 'learning-progression') }}:
    apim_path: 'learningprogressions'
    function_app_prefix: 'learn'
  ${{ elseif eq(parameters['dss_service'], 'outcomes') }}:
    apim_path: 'outcomes'
    function_app_prefix: 'otcm'
  ${{ elseif eq(parameters['dss_service'], 'sessions') }}:
    apim_path: 'sessions'
    function_app_prefix: 'sess'
  ${{ elseif eq(parameters['dss_service'], 'subscriptions') }}:
    apim_path: 'subscriptions'
    function_app_prefix: 'subs'
  ${{ elseif eq(parameters['dss_service'], 'transfer') }}:
    apim_path: 'transfers'
    function_app_prefix: 'tran'
  ${{ elseif eq(parameters['dss_service'], 'webchat') }}:
    apim_path: 'webchats'
    function_app_prefix: 'wchat'

  ${{ if eq(parameters['environment'], 'at') }}:
    ado_service_connection: 'SFA-DSS-DevTest'
  ${{ elseif eq(parameters['environment'], 'test') }}:
    ado_service_connection: 'SFA-DSS-DevTest'

trigger: none

pool:
  vmImage: "ubuntu-latest"

jobs:
- job: logVariablesAndParams
  displayName: 'Log variables and parameters'
  steps:
  - bash: |
      echo #
      echo The DSS Service you selected was : ${{parameters.dss_service}}
      echo The Function App and APIM Version you selected was : ${{parameters.version}}
      echo The Environment you selected was : ${{parameters.environment}}
      echo #
      echo The APIM path has been set to : ${{variables.apim_path}}
      echo The Function App prefix has been set to : ${{variables.function_app_prefix}}
      echo #
      echo Have you chosen to delete the APIM version? : ${{parameters.delete_apim}}
      echo Have you chosen to delete the Function App version? : ${{parameters.delete_func_app}}
      echo #
      echo If version is original:
      echo - Function app name : dss-${{parameters.environment}}-${{variables.function_app_prefix}}-v1-fa
      echo - API Management API : ${{variables.apim_path}}  within  dss-${{parameters.environment}}-shared-apim
      echo If version is not original:
      echo - Function app name : dss-${{parameters.environment}}-${{variables.function_app_prefix}}-${{parameters.version}}-fa
      echo - API Management API : ${{variables.apim_path}}-${{parameters.version}}  within  dss-${{parameters.environment}}-shared-apim
      echo #
    displayName: 'Output variable/parameter values'
- job: checkIfApiExists
  displayName: 'Check APIM presence'
  condition: eq('${{ parameters.delete_apim }}', 'yes')
  steps:
  - task: AzureCLI@2
    displayName: 'Check if the specified API version exists'
    inputs:
      azureSubscription: ${{variables.ado_service_connection}}
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      ${{ if eq(parameters['version'], 'original') }}:
        inlineScript: az apim api show --api-id ${{variables.apim_path}} -g dss-${{parameters.environment}}-shared-rg --service-name dss-${{parameters.environment}}-shared-apim
      ${{ if not(eq(parameters['version'], 'original')) }}:
        inlineScript: az apim api show --api-id ${{variables.apim_path}}-${{parameters.version}} -g dss-${{parameters.environment}}-shared-rg --service-name dss-${{parameters.environment}}-shared-apim
- job: manualInterventionApim
  displayName: 'Awaiting APIM deletion confirmation'
  pool: server
  timeoutInMinutes: 4320 # 3 days
  dependsOn: checkIfApiExists
  condition: in(dependencies.checkIfApiExists.result, 'Succeeded')
  steps:
    - task: ManualValidation@0
      timeoutInMinutes: 1440 # 24 hours
      displayName: Awaiting deletion confirmation
      inputs:
        notifyUsers: ''
        ${{ if eq(parameters['version'], 'original') }}:
          instructions: Please confirm you'd like to delete ${{variables.apim_path}} from dss-${{parameters.environment}}-shared-apim
        ${{ if not(eq(parameters['version'], 'original')) }}:
          instructions: Please confirm you'd like to delete ${{variables.apim_path}}-${{parameters.version}} from dss-${{parameters.environment}}-shared-apim
        onTimeout: 'reject'
- job: deleteApi
  displayName: 'Delete API version'
  dependsOn: manualInterventionApim
  condition: in(dependencies.manualInterventionApim.result, 'Succeeded')
  steps:
  - task: AzureCLI@2
    displayName: 'Perform deletion of API version'
    inputs:
      azureSubscription: ${{variables.ado_service_connection}}
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      ${{ if eq(parameters['version'], 'original') }}:
        inlineScript: az apim api delete --api-id ${{variables.apim_path}} -g dss-${{parameters.environment}}-shared-rg --service-name dss-${{parameters.environment}}-shared-apim --yes
      ${{ if not(eq(parameters['version'], 'original')) }}:
        inlineScript: az apim api delete --api-id ${{variables.apim_path}}-${{parameters.version}} -g dss-${{parameters.environment}}-shared-rg --service-name dss-${{parameters.environment}}-shared-apim --yes
- job: checkIfFuncAppExists
  displayName: 'Check Func App presence'
  dependsOn: deleteApi
  condition: and(eq('${{ parameters.delete_func_app }}', 'yes'), in(dependencies.deleteApi.result, 'Succeeded', 'Skipped'))
  steps:
  - task: AzureCLI@2
    displayName: 'Check if the specified function app exists'
    inputs:
      azureSubscription: ${{variables.ado_service_connection}}
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      ${{ if eq(parameters['version'], 'original') }}:
        inlineScript: az functionapp show -n dss-${{parameters.environment}}-${{variables.function_app_prefix}}-v1-fa -g dss-${{parameters.environment}}-${{variables.function_app_prefix}}-rg
      ${{ if not(eq(parameters['version'], 'original')) }}:
        inlineScript: az functionapp show -n dss-${{parameters.environment}}-${{variables.function_app_prefix}}-${{parameters.version}}-fa -g dss-${{parameters.environment}}-${{variables.function_app_prefix}}-rg
- job: manualInterventionFuncApp
  displayName: 'Awaiting Func App deletion confirmation'
  pool: server
  timeoutInMinutes: 4320 # 3 days
  dependsOn: checkIfFuncAppExists
  condition: in(dependencies.checkIfFuncAppExists.result, 'Succeeded')
  steps:
    - task: ManualValidation@0
      timeoutInMinutes: 1440 # 24 hours
      displayName: Awaiting deletion confirmation
      inputs:
        notifyUsers: ''
        ${{ if eq(parameters['version'], 'original') }}:
          instructions: Please confirm you'd like to delete dss-${{parameters.environment}}-${{variables.function_app_prefix}}-v1-fa
        ${{ if not(eq(parameters['version'], 'original')) }}:
          instructions: Please confirm you'd like to delete dss-${{parameters.environment}}-${{variables.function_app_prefix}}-${{parameters.version}}-fa
        onTimeout: 'reject'
- job: deleteFuncApp
  displayName: 'Delete Func App version'
  dependsOn: manualInterventionFuncApp
  condition: in(dependencies.manualInterventionFuncApp.result, 'Succeeded')
  steps:
  - task: AzureCLI@2
    displayName: 'Perform deletion of Function App'
    inputs:
      azureSubscription: ${{variables.ado_service_connection}}
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      ${{ if eq(parameters['version'], 'original') }}:
        inlineScript: az functionapp delete -n dss-${{parameters.environment}}-${{variables.function_app_prefix}}-v1-fa -g dss-${{parameters.environment}}-${{variables.function_app_prefix}}-rg
      ${{ if not(eq(parameters['version'], 'original')) }}:
        inlineScript: az functionapp delete -n dss-${{parameters.environment}}-${{variables.function_app_prefix}}-${{parameters.version}}-fa -g dss-${{parameters.environment}}-${{variables.function_app_prefix}}-rg

## TODO - who should be able to approve the manual validations?
## TODO - should people be notified via email? A group?