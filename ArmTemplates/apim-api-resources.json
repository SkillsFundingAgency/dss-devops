{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "AdminEmail": {
            "type": "string"
        },
        "ApiName": {
            "type": "string"
        },
        "DssApiVersion": {
            "type":"string",
            "metadata": {
              "description": "The version of the API, must be in the format v1, v2 ... v10, etc"
            },
            "defaultValue": "v2"
        },
        "EnvironmentName": {
            "type": "string",
            "metadata": {
                "description": "Abbreviated name for the environment, eg: AT, TEST, PP, PRD"
            }
        },
        "HostnameRoot": {
            "type": "string",
            "metadata": {
                "description": "The hostname used by the API (Proxy) and Developer Portal (Portal)"
            }
        },
        "LoggerSamplingPercentage": {
            "type": "int",
            "defaultValue": 100,
            "minValue": 0,
            "maxValue": 100,
            "metadata": {
                "description": "The percentage of requests to APIM to be sampled by Application Insights"
            }
        },
        "OauthAuthenticationServer": {
            "type": "string",
            "defaultValue": ""
        },
        "OauthB2CFunctionAppApplicationId": {
            "type": "string",
            "defaultValue": ""
        },
        "OauthB2CInstance": {
            "type": "string",
            "defaultValue": ""
        },
        "OauthB2CPolicy": {
            "type": "string",
            "defaultValue": ""
        },
        "OrganizationName": {
            "type": "string",
            "defaultValue": "National Careers Service"
        },
        "PortalKeyVaultCertificatePath": {
            "type": "string",
            "metadata": {
                "description": "The certificate identifier, eg https://dss-dev-shared-kv.vault.azure.net/certificates/wildcard-dss-nationalcareersservice-direct-gov-uk/identifierstringabc123"
            }
        },
        "ProductDisplayName": {
            "type": "string",
            "defaultValue": "Data Sharing Service"
        },
        "ProxyKeyVaultCertificatePath": {
            "type": "string",
            "metadata": {
                "description": "The certificate identifier, eg https://dss-dev-shared-kv.vault.azure.net/certificates/wildcard-dss-nationalcareersservice-direct-gov-uk/identifierstringabc123"
            }
        },
        "SkuTier": {
            "type": "string",
            "allowedValues": [
                "Developer",
                "Basic",
                "Standard",
                "Premium"
            ],
            "defaultValue": "Developer"
        },
        "SubnetName": {
            "type": "string",
            "defaultValue": ""
        },
        "SubnetResourceGroup": {
            "type": "string",
            "defaultValue": ""
        },
        "VnetName": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {
        "apimApiVersionName": "[concat(parameters('ApiName'), '-', parameters('DssApiVersion'))]",

        "apimLoggerName": "[concat('dss-', toLower(parameters('EnvironmentName')), '-apim-ai', '-logger')]",
        "apimPortalHostname": "[if(equals(parameters('EnvironmentName'), 'PRD'), concat('portal.', parameters('HostnameRoot')), concat(toLower(parameters('EnvironmentName')), '-portal.', parameters('HostnameRoot')))]",
        "apimProxyHostname": "[if(equals(parameters('EnvironmentName'), 'PRD'), concat(parameters('HostnameRoot')), concat(toLower(parameters('EnvironmentName')), '.', parameters('HostnameRoot')))]",
        "apimProductInstanceName": "[toLower(replace(parameters('ProductDisplayName'), ' ', '-'))]",
        "apimServiceName": "[toLower(concat('dss-',parameters('EnvironmentName'),'-shared-apim'))]",
        "apimVnetId": "[if(equals(parameters('SubnetName'), ''), '', resourceId(parameters('SubnetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('VnetName')))]",
        "apimSubnetId": "[if(equals(parameters('SubnetName'), ''), '',concat(variables('apimVnetId'), '/subnets/', parameters('SubnetName')))]",
        "apimSubnetConfig": {
            "withSubnet": {
                "subnetResourceId": "[variables('apimSubnetId')]"
            },
            "withoutSubnet": null
        },
        "noAuthenticationProvider": {
            "oAuth2": null,
            "openid": null
        },
        "oauthAuthenticationProvider": {
            "oAuth2": {
                "authorizationServerId": "[parameters('OauthAuthenticationServer')]"
            }
        },
        "authenticationProvider": "[if(equals(parameters('OauthAuthenticationServer'), ''), variables('noAuthenticationProvider'), variables('oauthAuthenticationProvider'))]"
    },
    "resources": [
        {
            "name": "[concat(variables('apimServiceName'), '/', variables('apimApiVersionName'))]",
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2018-01-01",
            "properties": {
                "apiVersion": "[parameters('DssApiVersion')]",
                "apiVersionSetId": "",
                "authenticationSettings": "[variables('authenticationProvider')]",
                "displayName": "[variables('apimApiVersionName')]",
                "path": "[parameters('ApiName')]",
                "protocols": [
                    "https"
                ]
            },
            "resources": [
                {
                    "name": "applicationinsights",
                    "type": "diagnostics",
                    "apiVersion": "2018-06-01-preview",
                    "properties": {
                        "alwaysLog": "allErrors",
                        "loggerId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.ApiManagement/service/', variables('apimServiceName'), '/loggers/', variables('apimLoggerName'))]",
                        "sampling": {
                            "samplingType": "fixed",
                            "percentage": "[parameters('LoggerSamplingPercentage')]"
                        },
                        "enableHttpCorrelationHeaders": true
                    },
                    "resources": [
                        {
                            "name": "[variables('apimLoggerName')]",
                            "type": "loggers",
                            "apiVersion": "2018-01-01",
                            "dependsOn": [
                                "applicationinsights"
                            ]
                        }
                    ],
                    "dependsOn": [
                        "[parameters('ApiName')]"
                    ]
                }
            ],
            "dependsOn": [
                "[concat(parameters('ApiName'), '-versionset')]"
            ]
        },
        {
            "name": "[concat(variables('apimServiceName'), '/', variables('apimProductInstanceName'))]",
            "type": "Microsoft.ApiManagement/service/products",
            "apiVersion": "2018-01-01",
            "properties": {
                "description": "string",
                "terms": "string",
                "subscriptionRequired": true,
                "approvalRequired": true,
                "subscriptionsLimit": 1,
                "state": "published",
                "displayName": "[variables('apimProductInstanceName')]"
            },
            "resources": [
                {
                    "name": "Developers",
                    "type": "groups",
                    "apiVersion": "2018-01-01",
                    "dependsOn": [
                        "[variables('apimProductInstanceName')]"
                    ]
                },
                {
                    "name": "[parameters('ApiName')]",
                    "type": "apis",
                    "apiVersion": "2018-01-01",
                    "dependsOn": [
                        "[concat('Microsoft.ApiManagement/service/', variables('apimServiceName'), '/apis/', parameters('ApiName'))]",
                        "[concat('Microsoft.ApiManagement/service/', variables('apimServiceName'), '/products/', variables('apimProductInstanceName'))]"
                    ]
                }
            ],
            "dependsOn": [
            ]
        },
        {
            "name": "[concat(parameters('ApiName'), '-versionset')]",
            "type": "api-version-sets",
            "apiVersion": "2018-01-01",
            "properties": {
              "description": "[concat('The ', parameters('ApiName'), ' API version set')]",
              "versionHeaderName": "version",
              "displayName": "[parameters('ApiName')]",
              "versioningScheme": "Header"
            },
            "dependsOn": [
            ]
          }
    ],
    "outputs": {}
}